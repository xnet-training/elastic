version: '3.1'

volumes:
  certs:
    driver: local
  esdata01:
    driver: local
  kibanadata:
    driver: local
  metricbeatdata01:
    driver: local
  filebeatdata01:
    driver: local
  logstashdata01:
    driver: local

networks:
  elastic:
    external: false

services:
  #
  ## Elastic Configuration
  #
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
    - "./setup.sh:/opt/setup/setup.sh"
    - "certs:/usr/share/elasticsearch/config/certs"
    - "./es-instances.yml:/usr/share/elasticsearch/config/certs/instances.yml"
    user: "0"
    command: [ "bash", "/opt/setup/setup.sh" ]
    env_file: [ .env ]
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    networks:
    - elastic
  #
  ## Elastic Elasticsearch
  #
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION:-8.0.0}
    ports:
    - "9300:9300"
    - "${ES_PORT}:9200"
    labels:
      co.elastic.logs/module: elasticsearch
    env_file: [ .env ]
    depends_on:
      setup:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    volumes:
    - certs:/usr/share/elasticsearch/config/certs
    - esdata01:/usr/share/elasticsearch/data
    #- "./es-instances.yml:/usr/share/elasticsearch/config/certs/instances.yml"
    #user: "0" 
    environment:
     - node.name=es01
     - cluster.name=${CLUSTER_NAME}
     - discovery.type=single-node
     - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
     - bootstrap.memory_lock=true
     - xpack.security.enabled=true
     - xpack.security.http.ssl.enabled=true
     - xpack.security.http.ssl.key=certs/es01/es01.key
     - xpack.security.http.ssl.certificate=certs/es01/es01.crt
     - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
     - xpack.security.transport.ssl.enabled=true
     - xpack.security.transport.ssl.key=certs/es01/es01.key
     - xpack.security.transport.ssl.certificate=certs/es01/es01.crt
     - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
     - xpack.security.transport.ssl.verification_mode=certificate
     - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${ES_MEM_LIMIT}
    #extra_hosts:
    #  es01: 127.0.0.1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
    - elastic

  #
  ## Elastic Kibana
  #
  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION:-8.0.0}
    ports:
    - "${KIBANA_PORT:-5601}:5601"
    labels:
      co.elastic.logs/module: kibana
    volumes:
    #- ./kibana.yml:/usr/share/kibana/config/kibana.yml
    - certs:/usr/share/kibana/config/certs
    - kibanadata:/usr/share/kibana/data
    depends_on:
    - es01
    environment:
    - SERVERNAME=kibana
    - ELASTICSEARCH_HOSTS=https://es01:9200
    - ELASTICSEARCH_USERNAME=kibana_system
    - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    - XPACK_SECURITY_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    - XPACK_REPORTING_ENCRYPTIONKEY=${ENCRYPTION_KEY}
    - xpack.reporting.roles.enabled=false
    networks:
    - elastic
